# This is a workflow to create github release for a tag and publish the package to npm repo
name: release
on:
  push:
    tags:
      - "v*"
      # patterns to match for tag creation. Here all tags similar to v1.0 or
      # v1.2.0 will trigger this action
      - "v[0-9]+.[0-9]+.[0-9]+*"

      
jobs:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
     outputs:
      isLatest: ${{ steps.release_type.outputs.latest }}
      - id: release_type
        name: Identify release type
        # For understanding how to set output read:
        # https://help.github.com/en/actions/reference/workflow-commands-for-github-actions#setting-an-output-parameter
        run: echo "::set-output name=latest::$LATEST"
        env:
          LATEST: ${{ contains(github.ref, '-alpha') != true && contains(github.ref, '-beta') != true && contains(github.ref, '-rc') != true }}
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - uses: actions/setup-node@v4
        with:
          node-version: lts/*
          registry-url: https://registry.npmjs.org/
      - run: npx changelogithub
        env:
          GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
      - run: npm ci
      - name: Build js
        run: npm run build
      - uses: actions/create-release@v1
        env:
          # this is provided by github, you don't need to do anything here
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: ${{ github.ref }}
          draft: false
          prerelease: ${{ needs.setup_variables.outputs.isLatest != 'true' }}
      - name: Publish to NPM with latest tag
        if: ${{ needs.setup_variables.outputs.isLatest == 'true' }}
        run: npm publish --access public
        env:
          NODE_AUTH_TOKEN: ${{secrets.NPM_TOKEN}}
      - name: Publish to NPM with next tag
        if: ${{ needs.setup_variables.outputs.isLatest != 'true' }}
        run: npm publish --access public --tag next
        env:
          NODE_AUTH_TOKEN: ${{secrets.NPM_TOKEN}}
